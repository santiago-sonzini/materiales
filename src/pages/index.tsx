import { Prueba } from "@prisma/client";
import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import { VictoryChart, VictoryLine, VictoryTheme } from "victory";
import { db } from "~/server/db";
import { baseUrl } from "~/utils/constants";


export default function Home({pruebas}: {pruebas: Prueba[]}) {

  const [edit, setedit] = useState(false)
  const [relleno, setrelleno] = useState()


  const editPrueba = async ( ) => {
    const response = await fetch(`${baseUrl}/api/v0/reviews`, {
        method: 'POST', 
        mode: 'cors', 
        cache: 'no-cache',
        credentials: 'same-origin', 
        headers: {
          'Content-Type': 'application/json'
        },
        redirect: 'follow', 
        referrerPolicy: 'no-referrer',
        body: JSON.stringify({id: '', data: {densidad: relleno}}) 
      });
      const data = response.json()
      return data
}
  return (
    <>
      <Head>
        <title>Ensayos de impacto</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-white">
      <div className="flex items-center justify-center flex-col w-1/2 h-max-1/3 h-1/3">
        <h1 className=" font-bold">Ensayo de impacto</h1>
        <h2 className="">Material: plastico</h2>
        <section className=" flex justify-evenly items-center w-full">
          <VictoryChart
  theme={VictoryTheme.material}
>
  <VictoryLine
    labels={({ datum }: {datum:any}) => datum.y}
    style={{
      data: { stroke: "#c43a31" },
      parent: { border: "1px solid #000"},
    }}
    padding={{top: 20, bottom: 60}}
    data={pruebas.map((item)=>{
      return {x: item.densidad, y:item.sigma}
    })}
  />
      </VictoryChart>
      <div className="w-1/2 flex flex-col items-center justify-center">
        <h3 className="font-bold">Ultimas pruebas</h3>
        {
          pruebas.length > 0
          ?
          pruebas.map((item, i)=>{
            return(
              <span className="h-4/5 flex flex-col justify-center items-center">
            <p className="font-bold">Prueba {i+1}:</p>
            <p><span className=" flex items-center justify-center">{edit ? <input className=" border border-black" type="number" /> : <p>Relleno: {item.densidad}</p>} { edit ? <span className="flex justify-center">
            <button onClick={()=>{setedit(true)}}>
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-6 h-6">
  <path strokeLinecap="round" strokeLinejoin="round" d="M4.5 12.75l6 6 9-13.5" />
</svg>

            </button>
            <button onClick={()=>{setedit(false)}}>
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-6 h-6">
  <path strokeLinecap="round" strokeLinejoin="round" d="M6 18L18 6M6 6l12 12" />
</svg>

            </button>
            </span>
            :
            <button onClick={()=>{setedit(true)}}>
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-6 h-6">
  <path strokeLinecap="round" strokeLinejoin="round" d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10" />
</svg>
            </button>}
</span>  Sigma: {item.sigma}  </p>
        </span>
            )
          })
          :
          null
        }
      </div>
        </section>
      
      </div>
      </main>
    </>
  );
}


export const getServerSideProps = (async (context: any) => {
  try {
    const pruebas = await db.prueba.findMany({
      select:{
        densidad: true,
        sigma:true
      }
    })
    return { props: { pruebas } }
  } catch (error) {
    return { props: { purebas: [] } }
  }
})